@using Syncfusion.JavaScript

@using OneTETH.Models
@model OneTETH.Model.Models.ReportFilter
@{
    ViewBag.Title = "ReportViewer";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style type="text/css">
    .reportcontainer {
        height: 300px;
        padding-top: 10px;
    }
</style>
<script>
    var isFirstTime = true;
    function reportLoadComplete() {
        // ej.widget.init($("#reportbox"));
        $('#reportfiltersubmit, #reportbox').show();
        $('#resetbtn').show();
        $('#loadingbutton').hide();
        if (isFirstTime) {
            $("#reportbox").hide();
        }
        isFirstTime = false;
    }
</script>
<div class="container-fluid">
    <div class="row panelpadding panel panel-default">
        <div class="col-md-12 filterpanel panel-body">
            @*@using (Ajax.BeginForm("LoadAndFilterReport", "ReportViewer", new AjaxOptions { OnComplete = "reportLoadComplete()", OnBegin = "reportLoadStart()", HttpMethod = "Post", InsertionMode = InsertionMode.Replace, UpdateTargetId = "reportbox" }))
                {*@
            <form>
                <div class="row">
                    <div class="col-md-3">
                        <label><font color="red">Start Submission Date *</font></label><br />
                        @Html.EJ().DatePickerFor(model => model.StartSubmissionDateStr).Width("100%").Value(Model.StartSubmissionDate).ValidationMessages(message => message.AddMessage("required", "* required")).ValidationRules(vr => vr.AddRule("required", true)).DateFormat("dd/MM/yyyy").ShowRoundedCorner(true)
                    </div>
                    <div class="col-md-3">
                        <label><font color="red">End Submission Date *</font></label>
                        @Html.EJ().DatePickerFor(model => model.EndSubmissionDateStr).Width("100%").Value(Model.EndSubmissionDate).ValidationMessages(message => message.AddMessage("required", "* required")).ValidationRules(vr => vr.AddRule("required", true)).DateFormat("dd/MM/yyyy").ShowRoundedCorner(true)
                    </div>
                    <div class="col-md-3">
                        <label>Broker Name</label><br />
                        @Html.EJ().AutocompleteFor(model => model.BrokerName).Datasource(dataSource => dataSource.URL(Url.Action("FilterCustomBrokers", "ReportViewer")).Adaptor(AdaptorType.UrlAdaptor)).Query("ej.Query()").AutocompleteFields(af => af.Text("CustomsBrokerName")).HighlightSearch(true).FilterType(FilterOperatorType.Contains).ShowRoundedCorner(true).ShowPopupButton(true).Width("100%")
                    </div>
                    <div class="col-md-3">
                        <label>Invoice Number</label><br />
                        @Html.TextBoxFor(model => model.InvoiceNo, new { @class = "form-control" })
                    </div>

                </div>

                <div class="row">
                    <div class="col-md-3">
                        <label>Declaration Number</label><br />
                        @Html.TextBoxFor(model => model.DeclarationNo, new { @class = "form-control" })
                    </div>
                    <div class="col-md-3">
                        <label>Status Code</label><br />
                        @Html.TextBoxFor(model => model.StatusCode, new { @class = "form-control" })
                    </div>
                    <div class="col-md-3">
                        <label>Compensation</label><br />
                        @Html.EJ().DropDownListFor(model => model.Compensation, new { @class = "drop-down" }).Datasource((IEnumerable<DropDownElement>)ViewBag.Compensation).DropDownListFields(pcc => pcc.ID("Value").Text("Text").Value("Value")).Value(Model.Compensation).Width("100%").ShowRoundedCorner(true)
                    </div>
                    <div class="col-md-3">
                        <label>Mode Of Transport</label><br />
                        @Html.EJ().DropDownListFor(model => model.ModeOfTransport, new { @class = "drop-down" }).Datasource((IEnumerable<DropDownElement>)ViewBag.ModeOfTransport).DropDownListFields(pcc => pcc.ID("Value").Text("Text").Value("Value")).Value(Model.ModeOfTransport).Width("100%").ShowRoundedCorner(true)
                    </div>
                    @*<div class="col-md-2 col-md-offset-10">
                            <br />
                            <button type="submit" onclick="return loadReport()" id="reportfiltersubmit" class="btn btn-primary">
                                <i class="fa fa-search" aria-hidden="true"></i>&nbsp; Search
                            </button>
                            <button type="button" style="display:none" id="loadingbutton" class="btn btn-warning">Please wait...</button>
                            <button type="reset" id="resetbtn" class="btn btn-danger">
                                <i class="fa fa-refresh" aria-hidden="true"></i>&nbsp; Refresh
                            </button>

                        </div>*@
                </div>
                <div class="row">
                    <div class="col-md-3">
                        <label>Email Address </label><br />
                        <input type="text" class="form-control" id="txtEmailAddress">
                        <label for="txtEmailAddressSuccessError" class="e-validation-error" id="txtEmailAddressSuccessError"></label>

                    </div>
                    <div class="col-md-3">
                        <br />
                        <button type="submit" id="processemail" class="btn btn-info" onclick="return SendEmailMeReport()"> E-mail Me! </button>
                    </div>
                    <div class="col-md-2 col-md-offset-4">
                        <br />
                        <button type="submit" onclick="return loadReport()" id="reportfiltersubmit" class="btn btn-primary">
                            <i class="fa fa-search" aria-hidden="true"></i>&nbsp; Search
                        </button>
                        <button type="button" style="display:none" id="loadingbutton" class="btn btn-warning">Please wait...</button>
                        <button type="reset" id="resetbtn" class="btn btn-danger">
                            <i class="fa fa-refresh" aria-hidden="true"></i>&nbsp; Refresh
                        </button>
                    </div>
                </div>
            </form>
            @*}*@
            <div class="row">
                <div class="col-md-12 reportcontainer" id="reportbox" style="display:none">
                    <iframe id="ifrmReportViewer" frameBorder="0" onload="reportLoadComplete()" height="300px" width="100%" scrolling="no"></iframe>
                </div>
            </div>
        </div>

    </div>
</div>

@section scripts{
    <script type="text/javascript">

    

        function SendEmailMeReport() {
            //$('#reportfiltersubmit').click();

            if ($("#txtEmailAddress").val() == "") {
                $("#txtEmailAddressSuccessError").text('* required');
                $("#txtEmailAddressSuccessError").show();
                return false;
            }
            else {
                $("#txtEmailAddressSuccessError").text('');
                $("#txtEmailAddressSuccessError").hide();
                var EmailAddress = $("#txtEmailAddress").val();
                var startdate = $("#StartSubmissionDateStr").val();
                var enddate = $("#EndSubmissionDateStr").val();

                if (startdate != "" && enddate != "") {
                    var broker = $("#BrokerName").val();
                    var invoiceno = $("#InvoiceNo").val();
                    var decno = $("#DeclarationNo").val();
                    var statuscode = $("#StatusCode").val();
                    var compensation = $("#Compensation").val();
                    var modeoftransport = $("#ModeOfTransport").val();

                    var ObjEZYReportExportMonitor_WinService = {
                        EZYReportExportMonitorID: 0,
                        EmailAddress: EmailAddress,
                        FileName: startdate,
                        FilePath: enddate,
                        PStartSubmissionDate: null,
                        PEndSubmissionDate: null,
                        PCustomBrokerName: broker,
                        PPurchaseCountryCode: "",
                        PInvoiceNumber: invoiceno,
                        PDeclarationNumber: decno,
                        PStatus: statuscode,
                        PModeOfTransport: modeoftransport,
                        PCompensation: compensation,
                        IsFileGenerated: false,
                        IsEmailSent: false
                    };

                    $.ajax({
                        url: "/ReportViewer/SaveEmailMe/",
                        async: false,
                        cache: false,
                        type: "POST",
                        contentType: 'application/json',
                        data: JSON.stringify({ ObjEZYReportExportMonitor_WinService: ObjEZYReportExportMonitor_WinService }),
                        success: function (data) {
                            if (data == true) {
                                $("#txtEmailAddress").val('');
                                $("#txtEmailAddressSuccessError").text('Report will be sent to ' + EmailAddress);
                                $("#txtEmailAddressSuccessError").show();
                            }
                            else {
                                $("#txtEmailAddressSuccessError").text('Email sending failure. Contact administrator.');
                                $("#txtEmailAddressSuccessError").show();
                            }
                        },
                        error: function (reponse) {                           
                            $("#txtEmailAddressSuccessError").text("error : " + reponse);
                            $("#txtEmailAddressSuccessError").show();
                        }
                    });
                    return false;
                }

            }

        }

        function loadReport() {
            //$('#reportfiltersubmit').click();
            var startdate = $("#StartSubmissionDateStr").val();
            var enddate = $("#EndSubmissionDateStr").val();
            if (startdate != "" && enddate != "") {
                reportLoadStart();
                var url = "../../ReportViewer/EzyReportViewer_SSRS.aspx?startdate=" + startdate + "&enddate=" + enddate + "&broker=" + $("#BrokerName").val() + "&invoiceno=" + $("#InvoiceNo").val() + "&decno=" + $("#DeclarationNo").val() + "&statuscode=" + $("#StatusCode").val() + "&compensation=" + $("#Compensation").val() + "&modeoftransport=" + $("#ModeOfTransport").val();
                var iframe = $("#ifrmReportViewer");
                if (iframe !== null) {
                    if (iframe.src) {
                        iframe.src = url;
                    } else {
                        iframe.attr("src", url);
                    }
                }
                return false;
            }
        }

        function reportLoadStart() {
            //$("#reportbox").html("");
            $('#reportfiltersubmit, #reportbox').hide();
            $('#resetbtn').hide();
            $('#loadingbutton').show();
        }

        $(document).ready(function () {
            $("#txtEmailAddressError").hide();
        })

        $.validator.setDefaults({
            //to validate all fields(hidden also)
            ignore: [],
            //if we don’t set custom class, default “error” class will be added
            errorClass: 'e-validation-error',
            //it specifies the error message display position
            errorPlacement: function (error, element) {
                $(error).insertAfter(element.closest(".e-widget"));
            }
        });

        //function onReportExport(args) {
        //    //increament file name in JS
        //    var _exportName = $(args.exportAction).find('#' + this._id + '_exportfileName');
        //    var currentDate = new Date();
        //    var day = currentDate.getDate();
        //    var month = currentDate.getMonth() + 1;
        //    var year = currentDate.getFullYear();
        //    var hour = currentDate.getHours();
        //    var min = currentDate.getMinutes();
        //    _exportName.val('ezyExpRpt_' + year.toString() + month.toString().padStart(2, "0") + day.toString() + hour.toString() + min.toString());
        //}
        //   YYYY - MM - DDTHH:mm: ss.sssZ
    </script>

}
